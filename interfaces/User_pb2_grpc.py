# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import interfaces.User_pb2 as User__pb2


class UserStub(object):
    """import "google/protobuf/timestamp.proto";

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Insert = channel.unary_unary(
                '/User/Insert',
                request_serializer=User__pb2.InsertRequest.SerializeToString,
                response_deserializer=User__pb2.StatusResponse.FromString,
                )
        self.List = channel.unary_stream(
                '/User/List',
                request_serializer=User__pb2.Empty.SerializeToString,
                response_deserializer=User__pb2.DataResponse.FromString,
                )
        self.Show = channel.unary_unary(
                '/User/Show',
                request_serializer=User__pb2.DataId.SerializeToString,
                response_deserializer=User__pb2.DataResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/User/Update',
                request_serializer=User__pb2.InsertRequest.SerializeToString,
                response_deserializer=User__pb2.StatusResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/User/Delete',
                request_serializer=User__pb2.DataId.SerializeToString,
                response_deserializer=User__pb2.StatusResponse.FromString,
                )


class UserServicer(object):
    """import "google/protobuf/timestamp.proto";

    """

    def Insert(self, request, context):
        """RPC Insert Data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Show(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Insert': grpc.unary_unary_rpc_method_handler(
                    servicer.Insert,
                    request_deserializer=User__pb2.InsertRequest.FromString,
                    response_serializer=User__pb2.StatusResponse.SerializeToString,
            ),
            'List': grpc.unary_stream_rpc_method_handler(
                    servicer.List,
                    request_deserializer=User__pb2.Empty.FromString,
                    response_serializer=User__pb2.DataResponse.SerializeToString,
            ),
            'Show': grpc.unary_unary_rpc_method_handler(
                    servicer.Show,
                    request_deserializer=User__pb2.DataId.FromString,
                    response_serializer=User__pb2.DataResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=User__pb2.InsertRequest.FromString,
                    response_serializer=User__pb2.StatusResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=User__pb2.DataId.FromString,
                    response_serializer=User__pb2.StatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'User', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class User(object):
    """import "google/protobuf/timestamp.proto";

    """

    @staticmethod
    def Insert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/User/Insert',
            User__pb2.InsertRequest.SerializeToString,
            User__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/User/List',
            User__pb2.Empty.SerializeToString,
            User__pb2.DataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Show(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/User/Show',
            User__pb2.DataId.SerializeToString,
            User__pb2.DataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/User/Update',
            User__pb2.InsertRequest.SerializeToString,
            User__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/User/Delete',
            User__pb2.DataId.SerializeToString,
            User__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
